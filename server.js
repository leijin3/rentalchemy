const express = require('express');
const { graphqlHTTP } = require('express-graphql');
const { buildSchema } = require('graphql');
const fs = require('fs');

let rawData = fs.readFileSync('db.json');
const db = JSON.parse(rawData);

// Construct a schema, using GraphQL schema language
const schema = buildSchema(`
type Users {
    id: Int
    user_name: String
    created_at: String
  }
  
type Query {
    hello: String
    users: [Users]
    user(id: Int, user_name: String): Users
    properties: [Properties]
    property(user_id: Int): Properties

}

  type Properties {
    id: Int
    user_id: Int
    st_address: String
    city: String
    state: String
    zip: String
    rent_amt: String
    type: String
    sqft: Int
    num_beds: Int
    num_baths: Int
    cost_basis: String
    date_acquired: String
    year_built: String
    parking: Int
  }
  
  type Tenants {
    id: Int
    property_id: Int
    name: String
    email: String
    phone: String
    lease_start: String
  }
  
  type Expenses {
    id: Int
    property_id: Int
    type: String
    date_spent: String
    amount_spent: String
    receipt_url: String
  }
  
  type Appliances {
    id: Int
    property_id: Int
    type: String
    price: String
    date_purchased: String
    warranty: String
  }
  
  type Incomes {
    id: Int
    property_id: Int
    type: String
    amt_received: String
    date_received: String
  }
  
  type Maintenances {
    id: Int
    property_id: Int
    description: String
    contractor: String
    date_finished: String
  }
  
  type AutogeneratedMainType {
    users: [Users]
    properties: [Properties]
    tenants: [Tenants]
    expenses: [Expenses]
    appliances: [Appliances]
    incomes: [Incomes]
    maintenances: [Maintenances]
  }
  
`);

const getUsers = () => {
  return db.users;
};

const getUserByAttribute = (user) => {
  return db.users.find(
    (p) => p[Object.keys(user)[0]] === Object.values(user)[0]
  );
};

// The root provides a resolver function for each API endpoint
var root = {
  hello: () => {
    return 'Hello world!';
  },
  users: () => getUsers(),
  user: (user) => getUserByAttribute(user),
};

const app = express();
app.use(
  '/graphql',
  graphqlHTTP({
    schema: schema,
    rootValue: root,
    graphiql: true,
  })
);
app.listen(4000);
console.log('Running a GraphQL API server at http://localhost:4000/graphql');
